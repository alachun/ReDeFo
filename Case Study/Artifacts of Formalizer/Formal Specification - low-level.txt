ACSL specifications for RDSM mode

/*@
  requires -360.0 <= omega_x <= 360.0;
  requires -360.0 <= omega_y <= 360.0;
  requires -360.0 <= omega_z <= 360.0;
  requires \is_finite(omega_x);

  assigns \nothing;

  ensures \result <==> (omega_x < 0.15) && (omega_x > -0.15) && (omega_y < 0.15) && (omega_y > -0.15) && (omega_z < 0.15) && (omega_z > -0.15);
*/
static bool is_rate_stable(float omega_x, float omega_y, float omega_z) {
    return (omega_x < 0.15) && (omega_x > -0.15) && (omega_y < 0.15) && (omega_y > -0.15) && (omega_z < 0.15) && (omega_z > -0.15);
}

/*@
  requires -360.0 <= omega_x <= 360.0;
  requires -360.0 <= omega_y <= 360.0;
  requires -360.0 <= omega_z <= 360.0;
  requires 0 <= *stable_time <= 10000;
  requires 0 <= *mode_time <= 10000;
  requires *mode == RDSM;
  requires \valid(mode);
  requires \valid(mode_time);
  requires \valid(stable_time);
  requires \separated(mode, mode_time, stable_time);

  assigns *mode, *mode_time, *stable_time;

  ensures \result == 0 || \result == 1;

    behavior case1:
      assumes ((omega_x < 0.15) && (omega_x > -0.15) && (omega_y < 0.15) && (omega_y > -0.15) && (omega_z < 0.15) && (omega_z > -0.15) && \at(*stable_time, Pre)+1 >= 44);
      ensures  *mode==PASM && *mode_time == 0 && *stable_time == 0;

    behavior case2:
      assumes ((omega_x < 0.15) && (omega_x > -0.15) && (omega_y < 0.15) && (omega_y > -0.15) && (omega_z < 0.15) && (omega_z > -0.15) && \at(*stable_time, Pre)+1 < 44 && \at(*mode_time, Pre) >= 128);
      ensures  *mode==PASM && *mode_time == 0 && *stable_time == 0;

    behavior case3:
      assumes ((omega_x < 0.15) && (omega_x > -0.15) && (omega_y < 0.15) && (omega_y > -0.15) && (omega_z < 0.15) && (omega_z > -0.15) && \at(*stable_time, Pre)+1 < 44 && \at(*mode_time, Pre) < 128);
      ensures *mode == \old(*mode) && *mode_time == \old(*mode_time) && *stable_time == \old(*stable_time)+1;

    behavior case4:
      assumes (!((omega_x < 0.15) && (omega_x > -0.15) && (omega_y < 0.15) && (omega_y > -0.15) && (omega_z < 0.15) && (omega_z > -0.15)) && \at(*mode_time, Pre) >= 128);
      ensures *mode == PASM && *mode_time == 0 && *stable_time == 0;

    behavior case5:
      assumes (!((omega_x < 0.15) && (omega_x > -0.15) && (omega_y < 0.15) && (omega_y > -0.15) && (omega_z < 0.15) && (omega_z > -0.15)) && \at(*mode_time, Pre) < 128);
      ensures *mode == \old(*mode) && *mode_time == \old(*mode_time) && *stable_time == \old(*stable_time);

    complete behaviors;
    disjoint behaviors;
*/





ACSL specifications for PASM mode

/*@
  requires -180.0 <= pitch_angle <= 180.0;
  requires sun_flag == 0 || sun_flag == 1;
  requires 0 <= *stable_time <= 10000;
  requires 0 <= *mode_time <= 10000;
  requires *mode == PASM;
  requires \valid(mode);
  requires \valid(mode_time);
  requires \valid(stable_time);
  requires \separated(mode, mode_time, stable_time);

  assigns *mode, *mode_time, *stable_time;

  ensures \result == 0 || \result == 1;

   behavior case0:
      assumes sun_flag == 1 && (pitch_angle < 0.25) && (pitch_angle > -0.25) && \at(*stable_time, Pre)+1 > 12 && *mode_time > 720;
      ensures *mode == CSM && *mode_time == 0 && *stable_time == 0;

    behavior case1:
      assumes sun_flag == 1 && (pitch_angle < 0.25) && (pitch_angle > -0.25) && \at(*stable_time, Pre)+1 > 12 && *mode_time <= 720;
      ensures *mode == CSM && *mode_time == 0 && *stable_time == 0;

    behavior case2:
      assumes sun_flag == 1 && (pitch_angle < 0.25) && (pitch_angle > -0.25) && \at(*stable_time, Pre)+1 <= 12 && *mode_time > 720;
      ensures *mode == RASM && *mode_time == 0 && *stable_time == 0;

    behavior case3:
      assumes sun_flag == 1 && (pitch_angle < 0.25) && (pitch_angle > -0.25) && \at(*stable_time, Pre)+1 <= 12 && *mode_time <= 720;
      ensures *mode == \old(*mode) && *mode_time == \old(*mode_time) && *stable_time == \old(*stable_time)+1;

    behavior case4:
      assumes sun_flag == 1 && !((pitch_angle < 0.25) && (pitch_angle > -0.25)) && *mode_time > 720;
      ensures *mode == RASM && *mode_time == 0 && *stable_time == 0;

    behavior case5:
      assumes sun_flag == 1 && !((pitch_angle < 0.25) && (pitch_angle > -0.25)) && *mode_time <= 720;
      ensures *mode == \old(*mode) && *mode_time == \old(*mode_time) && *stable_time == \old(*stable_time);

    behavior case6:
      assumes sun_flag != 1 && \at(*mode_time, Pre) > 720;
      ensures *mode == RASM && *mode_time == 0 && *stable_time == 0;

    behavior case7:
      assumes sun_flag != 1 && \at(*mode_time, Pre) <= 720;
      ensures *mode == \old(*mode) && *mode_time == \old(*mode_time) && *stable_time == 0;

    complete behaviors;
    disjoint behaviors;
*/






ACSL specifications for RASM mode

/*@
  requires -180.0 <= roll_angle <= 180.0;
  requires sun_flag == 0 || sun_flag == 1;
  requires 0 <= *stable_time <= 10000;
  requires 0 <= *mode_time <= 10000;
  requires *mode == RASM;
  requires \valid(mode);
  requires \valid(mode_time);
  requires \valid(stable_time);
  requires \separated(mode, mode_time, stable_time);

  assigns *mode, *mode_time, *stable_time;

  ensures \result == 0 || \result == 1;

  behavior case0:
      assumes sun_flag == 1 && (roll_angle < 0.1) && (roll_angle > -0.1) && \at(*stable_time, Pre)+1 > 12 && *mode_time > 800;
      ensures *mode == CSM && *mode_time == 0 && *stable_time == 0;

    behavior case1:
      assumes sun_flag == 1 && (roll_angle < 0.1) && (roll_angle > -0.1) && \at(*stable_time, Pre)+1 > 12 && *mode_time <= 800;
      ensures *mode == CSM && *mode_time == 0 && *stable_time == 0;

    behavior case2:
      assumes sun_flag == 1 && (roll_angle < 0.1) && (roll_angle > -0.1) && \at(*stable_time, Pre)+1 <= 12 && *mode_time > 800;
      ensures *mode == PASM && *mode_time == 0 && *stable_time == 0;

    behavior case3:
      assumes sun_flag == 1 && (roll_angle < 0.1) && (roll_angle > -0.1) && \at(*stable_time, Pre)+1 <= 12 && *mode_time <= 800;
      ensures *mode == \old(*mode) && *mode_time == \old(*mode_time) && *stable_time == \old(*stable_time)+1;

    behavior case4:
      assumes sun_flag == 1 && !((roll_angle < 0.1) && (roll_angle > -0.1)) && *mode_time > 800;
      ensures *mode == PASM && *mode_time == 0 && *stable_time == 0;

    behavior case5:
      assumes sun_flag == 1 && !((roll_angle < 0.1) && (roll_angle > -0.1)) && *mode_time <= 800;
      ensures *mode == \old(*mode) && *mode_time == \old(*mode_time) && *stable_time == \old(*stable_time);

    behavior case6:
      assumes sun_flag != 1 && \at(*mode_time, Pre) > 800;
      ensures *mode == PASM && *mode_time == 0 && *stable_time == 0;

    behavior case7:
      assumes sun_flag != 1 && \at(*mode_time, Pre) <= 800;
      ensures *mode == \old(*mode) && *mode_time == \old(*mode_time) && *stable_time == 0;

    complete behaviors;
    disjoint behaviors;
*/

